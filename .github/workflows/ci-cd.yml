name: CI/CD Pipeline

on:
  # push:
  #   branches: [ main, develop ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:
    inputs:
      operator:
        description: 'dbt-operator to build and deploy'
        required: true
        default: 'dbt-operator'
        type: choice
        options:
          - dbt
          - dbt-core-operator
          - dbt-postgres-operator
      image_tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
        type: string
      registry:
        description: 'Docker registry URL'
        required: false
        default: 'localhost:65000'
        type: string
      push_to_registry:
        description: 'Push image to registry'
        required: false
        default: false
        type: boolean

env:
  REGISTRY_URL: ${{ github.event.inputs.registry || 'localhost:65000' }}
  IMAGE_TAG: ${{ github.event.inputs.image_tag || 'latest' }}
  OPERATOR_NAME: ${{ github.event.inputs.operator || 'dbt' }}

jobs:
  build-and-test:
    runs-on: self-hosted
    if: github.event.inputs.operator == 'dbt' || github.event.inputs.operator == '' || github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        cd ${{ env.OPERATOR_NAME }}
        make build IMAGE_NAME=${{ env.OPERATOR_NAME }} IMAGE_TAG=${{ env.IMAGE_TAG }} REGISTRY=${{ env.REGISTRY_URL }}

    - name: Push to registry
      if: github.event.inputs.push_to_registry == 'true' || github.ref == 'refs/heads/main'
      run: |
        cd ${{ env.OPERATOR_NAME }}
        make push IMAGE_NAME=${{ env.OPERATOR_NAME }} IMAGE_TAG=${{ env.IMAGE_TAG }} REGISTRY=${{ env.REGISTRY_URL }}

    - name: Clean up
      if: always()
      run: |
        cd ${{ env.OPERATOR_NAME }}
        make clean IMAGE_NAME=${{ env.OPERATOR_NAME }} IMAGE_TAG=${{ env.IMAGE_TAG }} REGISTRY=${{ env.REGISTRY_URL }}

  deploy:
    runs-on: self-hosted
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main' && (github.event.inputs.push_to_registry == 'true' || github.event_name == 'push')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deploying ${{ env.OPERATOR_NAME }}:${{ env.IMAGE_TAG }} to production"
        echo "Registry: ${{ env.REGISTRY_URL }}"
        echo "Deployment completed successfully"

    - name: Notify deployment
      run: |
        echo "âœ… Successfully deployed ${{ env.OPERATOR_NAME }}:${{ env.IMAGE_TAG }}"
        echo "ðŸ”— Registry: ${{ env.REGISTRY_URL }}"
        echo "ðŸ“¦ Image: ${{ env.REGISTRY_URL }}/${{ env.OPERATOR_NAME }}:${{ env.IMAGE_TAG }}"
